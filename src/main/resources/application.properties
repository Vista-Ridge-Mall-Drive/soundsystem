


spring.datasource.url=jdbc:h2:file:C:\\Users\\bgonzales\\test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.data.jpa.repositories.bootstrap-mode=default

hibernate.dialect=org.hibernate.dialect.HSQLDialect
hibernate.hbm2ddl.auto=create-drop

server.port = 9092
#
#Schema will be created using schema.sql and data.sql files
#spring.jpa.hibernate.ddl-auto=none
#
#Turn Statistics on and log SQL stmts
# 
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
# 
#If want to see very extensive logging
#spring.jpa.properties.hibernate.generate_statistics=true
#logging.level.org.hibernate.type=trace
#logging.level.org.hibernate.stat=debug
#
#
# https://www.devglan.com/spring-boot/spring-boot-mongodb-configuration
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=root
spring.data.mongodb.password=root
spring.data.mongodb.database=test_db
spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost
#
# https://www.thepolyglotdeveloper.com/2019/01/getting-started-mongodb-docker-container-deployment/
# https://blog.eduonix.com/software-development/learn-stop-kill-clean-docker-containers/
# https://spring.io/guides/gs/accessing-data-mongodb/
# docker run -d -p 27017-27019:27017-27019 --name mongodb mongo:latest
#
# docker run -d --name some-rabbit -p 5672:5672 -p 5673:5673 -p 15672:15672 rabbitmq:latest
# browser: http://localhost:15672/  
# https://spring.io/guides/gs/messaging-rabbitmq/